{
  "questionData": [
    {
      "id": "1",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "2",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "3",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "4",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "5",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "6",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "7",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "8",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "9",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "10",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "11",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "12",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "13",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "14",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "15",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "16",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "17",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "18",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "19",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "20",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "21",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "22",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "23",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "24",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "25",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "26",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "27",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "28",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "29",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "30",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "31",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "32",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "33",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "34",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "35",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "36",
      "question": "What is React primarily used for?",
      "options": [
        "Building mobile apps",
        "Building user interfaces",
        "Creating databases",
        "Handling HTTP requests"
      ],
      "answer": "Building user interfaces",
      "difficulty": "easy"
    },
    {
      "id": "37",
      "question": "Which hook is used to manage state in functional components?",
      "options": ["useEffect", "useState", "useContext", "useReducer"],
      "answer": "useState",
      "difficulty": "easy"
    },
    {
      "id": "38",
      "question": "What is JSX?",
      "options": [
        "A templating engine",
        "A syntax extension for JavaScript",
        "A CSS preprocessor",
        "A React component"
      ],
      "answer": "A syntax extension for JavaScript",
      "difficulty": "easy"
    },
    {
      "id": "39",
      "question": "Which company developed React?",
      "options": ["Google", "Facebook", "Microsoft", "Amazon"],
      "answer": "Facebook",
      "difficulty": "easy"
    },
    {
      "id": "40",
      "question": "What command creates a new React project using Vite?",
      "options": [
        "npm create vite@latest my-app",
        "npx create-react-app my-app",
        "npm start vite",
        "npm run build"
      ],
      "answer": "npm create vite@latest my-app",
      "difficulty": "easy"
    },
    {
      "id": "41",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "42",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "43",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "44",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "45",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "46",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "47",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "48",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "49",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "50",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "51",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "52",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "53",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "54",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "55",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "56",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "57",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "58",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "59",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "60",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "61",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "62",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "63",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "64",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "65",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "66",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "67",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "68",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "69",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "70",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "71",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "72",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "73",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "74",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "75",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "76",
      "question": "What does the useEffect hook do in React?",
      "options": [
        "Manages component state",
        "Handles side effects",
        "Creates new components",
        "Improves performance"
      ],
      "answer": "Handles side effects",
      "difficulty": "medium"
    },
    {
      "id": "77",
      "question": "Why should keys be used in lists?",
      "options": [
        "To style items",
        "To identify elements uniquely",
        "To make lists faster",
        "To store state"
      ],
      "answer": "To identify elements uniquely",
      "difficulty": "medium"
    },
    {
      "id": "78",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Sharing state between sibling components",
        "Passing props downward",
        "Creating new components",
        "Using Redux"
      ],
      "answer": "Sharing state between sibling components",
      "difficulty": "medium"
    },
    {
      "id": "79",
      "question": "What is prop drilling?",
      "options": [
        "Passing props through many levels unnecessarily",
        "Passing state through Context API",
        "Updating props directly",
        "Using props as keys"
      ],
      "answer": "Passing props through many levels unnecessarily",
      "difficulty": "medium"
    },
    {
      "id": "80",
      "question": "What is the purpose of React.StrictMode?",
      "options": [
        "To detect potential problems in an application",
        "To make code run faster",
        "To manage dependencies",
        "To enforce prop types"
      ],
      "answer": "To detect potential problems in an application",
      "difficulty": "medium"
    },
    {
      "id": "81",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "82",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "83",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "84",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "85",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    },
    {
      "id": "86",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "87",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "88",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "89",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "90",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    },
    {
      "id": "91",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "92",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "93",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "94",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "95",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    },
    {
      "id": "96",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "97",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "98",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "99",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "100",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    },
    {
      "id": "101",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "102",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "103",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "104",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "105",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    },
    {
      "id": "106",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "107",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "108",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "109",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "110",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    },
    {
      "id": "111",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "112",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "113",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "114",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "115",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    },
    {
      "id": "116",
      "question": "What is memoization in React?",
      "options": [
        "Caching a component to prevent re-rendering",
        "A form of lazy loading",
        "A debugging tool",
        "A CSS optimization"
      ],
      "answer": "Caching a component to prevent re-rendering",
      "difficulty": "hard"
    },
    {
      "id": "117",
      "question": "What does useCallback return?",
      "options": [
        "A memoized function",
        "A component",
        "A state variable",
        "An array"
      ],
      "answer": "A memoized function",
      "difficulty": "hard"
    },
    {
      "id": "118",
      "question": "What is React Fiber?",
      "options": [
        "A reimplementation of React's reconciliation algorithm",
        "A CSS library",
        "A new JSX version",
        "A React testing tool"
      ],
      "answer": "A reimplementation of React's reconciliation algorithm",
      "difficulty": "hard"
    },
    {
      "id": "119",
      "question": "What happens when you use setState inside useEffect without dependencies?",
      "options": [
        "It causes an infinite re-render",
        "It throws an error",
        "It runs only once",
        "It updates state silently"
      ],
      "answer": "It causes an infinite re-render",
      "difficulty": "hard"
    },
    {
      "id": "120",
      "question": "What is the purpose of React Profiler?",
      "options": [
        "To measure performance of React components",
        "To debug CSS",
        "To manage context",
        "To test props"
      ],
      "answer": "To measure performance of React components",
      "difficulty": "hard"
    }
  ],
  "userData": [
    {
      "id": 12345678,
      "name": "Richard Oladeji",
      "Email": "thedejirichards@gmail.com",
      "password": "$$$rirchard",
      "signUpDate": "Feb 2 2022",
      "lastLogInDate": "Oct 07 2025",
      "results": [
        {
          "quizId": "qz-0001",
          "difficultyType": "hard",
          "numberOfQuestions": 30,
          "correctlyAnswered": 10,
          "durationUsed": "2000",
          "dateStamp": 1759829992614,
          "remark": "fail"
        },
        {
          "quizId": "qz-0002",
          "difficultyType": "simple",
          "numberOfQuestions": 25,
          "correctlyAnswered": 18,
          "durationUsed": "1800",
          "dateStamp": 1759833592614,
          "remark": "pass"
        },
        {
          "quizId": "qz-0008",
          "difficultyType": "medium",
          "numberOfQuestions": 25,
          "correctlyAnswered": 16,
          "durationUsed": "2100",
          "dateStamp": 1759855192614,
          "remark": "good"
        }
      ]
    },
    {
      "id": 23456789,
      "name": "Bolaji Dauda",
      "Email": "bolajidauda@gmail.com",
      "password": "$$$bolaji",
      "signUpDate": "May 9 2024",
      "lastLogInDate": "Aug 10 2024",
      "results": [
        {
          "quizId": "qz-0009",
          "difficultyType": "hard",
          "numberOfQuestions": 30,
          "correctlyAnswered": 10,
          "durationUsed": "2000",
          "dateStamp": 1759829992614,
          "remark": "fail"
        }
      ]
    },
    {
      "id": 123456789,
      "name": "Folakemi Bodede",
      "Email": "folakemibodede@outlook.com",
      "password": "$$$folakemi",
      "signUpDate": "June 6 2024",
      "lastLogInDate": "Dec 12 2024",
      "results": null
    }
  ]
}
